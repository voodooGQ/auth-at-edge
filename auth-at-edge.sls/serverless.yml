service: private-spa

plugins:
- serverless-webpack
- serverless-pseudo-parameters
- '@silvermine/serverless-plugin-cloudfront-lambda-edge'

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  # Lambda@Edge maximum allowed memorySize and timeout
  memorySize: 128
  timeout: 5

# Need to keep the size under the 1mb Lambda@Edge limit.
# Individualizing the packages to bring down zip size.
package:
  individually: true

custom:
  webpack:
    excludeFiles:
      - "src/**/*.test.ts"
      - "src/**/__mocks__/*.ts"
    includeModules:
      forceExclude:
        - aws-sdk

functions:
  checkAuth:
    handler: src/lambda-edge/check-auth.handler
    role: LambdaEdgeExecutionRole
    lambdaAtEdge:
      distribution: CloudFrontDistribution
      eventType: 'viewer-request'
  httpHeaders:
    handler: src/lambda-edge/http-headers.handler
    role: LambdaEdgeExecutionRole
    lambdaAtEdge:
      distribution: CloudFrontDistribution
      eventType: 'origin-response'
  parseAuth:
    handler: src/lambda-edge/parse-auth.handler
    role: LambdaEdgeExecutionRole
    lambdaAtEdge:
      distribution: CloudFrontDistribution
      eventType: 'viewer-request'
      pathPattern: !Ref RedirectPathSignIn
  refreshAuth:
    handler: src/lambda-edge/refresh-auth.handler
    role: LambdaEdgeExecutionRole
    lambdaAtEdge:
      distribution: CloudFrontDistribution
      eventType: 'viewer-request'
      pathPattern: !Ref RedirectPathAuthRefresh
  signOut:
    handler: src/lambda-edge/sign-out.handler
    role: LambdaEdgeExecutionRole
    lambdaAtEdge:
      distribution: CloudFrontDistribution
      eventType: 'viewer-request'
      pathPattern: !Ref SignOutUrl
  userPoolDomainHandler:
    handler: src/user-pool/domain/index.handler
    role: UserPoolDomainHandlerRole
  userPoolClientUpdateHandler:
    handler: src/user-pool/client/index.handler
    role: UserPoolClientUpdateHandlerRole

resources:
  Parameters:
    EmailAddress:
      Type: String
      Description: Default Email to create a user
      Default: ssmith@onica.com
    RedirectPathSignIn:
      Type: String
      Description: The URL path that should handle the redirect from Cognito after sign-in
      Default: /parseauth
    RedirectPathSignOut:
      Type: String
      Description: The URL path that should handle the redirect from Cognito after sign-out
      Default: /
    RedirectPathAuthRefresh:
      Type: String
      Description: The URL path that should handle the JWT refresh request
      Default: /refreshauth
    SignOutUrl:
      Type: String
      Description: The URL path that you can visit to sign-out
      Default: /signout
    CookieSettings:
      Type: String
      Description: The settings for the cookies holding the JWT's. To be provided as a JSON object
      Default: >-
        {
          "idToken": "Path=/; Secure; SameSite=Lax",
          "accessToken": "Path=/; Secure; SameSite=Lax",
          "refreshToken": "Path=/; Secure; SameSite=Lax",
          "nonce": "Path=/; Secure; HttpOnly; Max-Age=1800; SameSite=Lax"
        }
    OAuthScopes:
      Type: String
      Description: The OAuth scopes to request the User Pool to add to the access token JWT. To be provided as a JSON array
      Default: >-
        ["phone", "email", "profile", "openid", "aws.cognito.signin.user.admin"]
    HttpHeaders:
      Type: String
      Description: The HTTP headers to set on all responses from CloudFront. To be provided as a JSON object
      Default: >-
        {
          "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'; connect-src 'self' https://*.amazonaws.com https://*.amazoncognito.com",
          "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
          "Referrer-Policy": "same-origin",
          "X-XSS-Protection": "1; mode=block",
          "X-Frame-Options": "DENY",
          "X-Content-Type-Options": "nosniff"
        }
    CreateCloudFrontDistribution:
      Type: String
      Description: Set to 'false' to skip the creation of a CloudFront distribution and associated resources, such as the private S3 bucket and the sample React app. This may be of use to you, if you just want to create the Lambda@Edge functions to use with your own CloudFront distribution.
      Default: "true"
    Version:
      Type: String
      Description: "Use for development: putting in a new version forces redeployment of Lambda@Edge functions"
      Default: "1.0.0"
  Outputs:
    S3Bucket:
      Description: The S3 Bucket where the SPA (React, Angular, Vue, ...) is uploaded to
      Value: !Ref S3Bucket
    WebsiteUrl:
      Description: URL of the CloudFront distribution that serves your SPA from S3
      Value: !Join
        - '//'
        - - 'https'
          - !GetAtt CloudFrontDistribution.DomainName
    CloudFrontDistribution:
      Description: ID of the CloudFront distribution that serves your SPA from S3
      Value: !Ref CloudFrontDistribution
    UserPoolId:
      Description: The ID of the Cognito User Pool
      Value: !Ref UserPool
    ClientId:
      Description: Client ID to use to interact with the User Pool
      Value: !Ref UserPoolClient
    CognitoAuthDomain:
      Description: The domain where the Cognito Hosted UI is served
      Value: !GetAtt UserPoolDomain.DomainName
  Resources:
    S3Bucket: ${file(./src/single-page-app/bucket.yml)}
    LambdaEdgeExecutionRole: ${file(./src/lambda-edge/execution-role.yml)}
    CloudFrontOriginAccessIdentity: ${file(./src/cloudfront/origin-access-identity.yml)}
    CloudFrontBucketPolicy: ${file(./src/single-page-app/bucket-policy.yml)}
    UserPool: ${file(./src/user-pool/user-pool.yml)}
    User: ${file(./src/user-pool/user.yml)}
    UserPoolClient: ${file(./src/user-pool/client/client.yml)}
    UserPoolDomainHandlerRole: ${file(./src/user-pool/domain/domain-handler-role.yml)}
    UserPoolDomain: ${file(./src/user-pool/domain/domain.yml)}
    DistributionLogBucket: ${file(./src/cloudfront/log-bucket.yml)}
    CloudFrontDistribution: ${file(./src/cloudfront/distribution.yml)}
    UserPoolClientUpdateHandlerRole: ${file(./src/user-pool/client/update-handler-role.yml)}
    UserPoolClientUpdate: ${file(./src/user-pool/client/update.yml)}
    StoredParameterClientId: ${file(./src/stored-parameters/client-id.yml)}
    StoredParameterCognitoAuthDomain: ${file(./src/stored-parameters/cognito-auth-domain.yml)}
    StoredParameterUserPoolId: ${file(./src/stored-parameters/user-pool-id.yml)}
    StoredParameterRedirectPathSignIn: ${file(./src/stored-parameters/redirect-path-sign-in.yml)}
    StoredParameterRedirectPathSignOut: ${file(./src/stored-parameters/redirect-path-sign-out.yml)}
    StoredParameterRedirectPathAuthRefresh: ${file(./src/stored-parameters/redirect-path-auth-refresh.yml)}
    StoredParameterSignOutUrl: ${file(./src/stored-parameters/sign-out-url.yml)}
